/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windowsApp;

import SwingTools.SwingTools;
import exceptions.ExceptionsDao;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import models.Runway;
import models.Spaceport;

/**
 *
 * @author dafna
 */
public class LandingSpaceship extends javax.swing.JDialog {
    
    List<Spaceport> spaceportsApp = new ArrayList<>();
    List<Runway> runwaysApp = new ArrayList<>();

    /**
     * Creates new form LandingSpaceship
     * @param parent
     * @param modal
     */
    public LandingSpaceship(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            SwingTools.getSwingTools().generateSelect(spaceship, "landing");                       
            SwingTools.getSwingTools().generateSelect(spaceport, "spaceport");
        } catch (SQLException | ExceptionsDao ex ) {
            JOptionPane.showMessageDialog(this, "" + ex.getMessage(), "Message", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spaceship = new javax.swing.JComboBox<>();
        spaceport = new javax.swing.JComboBox<>();
        runway = new javax.swing.JComboBox<>();
        landed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        spaceport.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                spaceportItemStateChanged(evt);
            }
        });

        landed.setText("Landing spaceship");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(spaceship, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(spaceport, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(runway, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(landed, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(runway, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(spaceport)
                    .addComponent(spaceship))
                .addGap(72, 72, 72)
                .addComponent(landed)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spaceportItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_spaceportItemStateChanged
        String spaceportSelected = spaceport.getSelectedItem().toString();        
        if(spaceportSelected.equalsIgnoreCase("Choose a runway")){
            JOptionPane.showMessageDialog(this, "You have not selected any runway", "Message", JOptionPane.WARNING_MESSAGE);
        }else{
            try {                
                SwingTools.getSwingTools().generateDynamicSelect(runway, spaceportSelected);
            } catch (SQLException | ExceptionsDao ex) {
                JOptionPane.showMessageDialog(this, "" + ex.getMessage(), "Message", JOptionPane.WARNING_MESSAGE);
            }
        }    
    }//GEN-LAST:event_spaceportItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton landed;
    private javax.swing.JComboBox<String> runway;
    private javax.swing.JComboBox<String> spaceport;
    private javax.swing.JComboBox<String> spaceship;
    // End of variables declaration//GEN-END:variables
}
